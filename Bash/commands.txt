# convert bytes to human-readable
# or https://github.com/gonejack/hsize
numfmt --to iec  387217685

ps -eo pcpu,args |grep sge_shepherd|egrep -E '^[90-100].*[[:digit:]]*'

## show total memory usage of a threaded process..
pmap $(ps -C mmfsd -o pid=)|tail -1|sed 's/K$//g'|awk '{print $2/(1024*1024)}'

## show top CPU user-processes..
sudo pdsh -a "ps -eo pcpu,pid,user,etime,args --sort=-%cpu |grep -v 'ps -eo pcpu,pid,user,etime,args'|head -20|grep -v root"|dshbak -c

##
sudo pdsh -w max0[20-80] "ps -eo pid,pcpu,user,etime,comm,args --sort=etime|grep -Ev 'root|rpcbind|rpcuser|ge-admin|dbus|hald|ntpd|postfix' |head -10"|dshbak -c

## multiline grep, note wildcards
##
pcregrep -i -v -M 'Killing connection from IPaddr.*\n.*Connection rese.*' /var/adm/ras/mmfs.log.latest

## kill process with string
sudo pdsh -w max[040-060] "pkill -SIGKILL -f 'puppet agent'"

## skip comments and blank lines
grep -v ^# dnsmasq.conf|grep -v ^$

ip -4 route list 0/0 ## (will list multiple default g/w ?)

arp-scan

Sorting + counting

hpc_sleep.debug.25:Tue Sep 25 15:23:56 CEST 2012 node054 - shutdown executed
hpc_sleep.debug.25:Tue Sep 25 19:23:56 CEST 2012 node054 - shutdown executed
hpc_sleep.debug.26:Wed Sep 26 18:23:57 CEST 2012 node054 - shutdown executed
hpc_sleep.debug.29:Sat Sep 29 18:33:56 CEST 2012 node054 - shutdown executed

grep node054 *|grep 'shutdown executed'|sort -k6,6n -M -k2,2 -k3,3n
-M      # calendar sort on the next field (-k2,2)..
-k2,2   # string sort of entire field 2 (Sep, Oct, Nov)
-k6,6n  # sort on entire 6th field only, numeric

you need to list the sort keys in the order you want them sorted..

for i in `qstat| awk '{ print $1}'|egrep [0-9]`; do echo -n "$i  "; qstat -j $i|grep usage;done

cat 19July2016.txt |awk ' { print $8 } '|cut -d@ -f2|sort |sed s/max//g| paste -s --delimiters="|" -
001|002|003|005|006|035|041|046|048|050|051|058|063|065|073|078|079|080|

qconf -shgrp @fastmem|egrep -o -w max[[:digit:]]{3}
qstat -u <id>|egrep -v '(job-ID|---)'|awk '{print $1}'|xargs -I {} qstat -j {} -u <id>|grep -E '(script_file|exec_host_list)'

# count number of times X appears in file Y
cat 8Aug.txt  | awk ' { tot[$0]++ } END { for (i in tot) print tot[i],i } ' | sort

## Timing
# Use gnomon (node.js; yum -y install nodejs+npm) for a real-time display of how long a command takes:
# https://github.com/paypal/gnomon
ls -dl $p|gnomon --type=elapsed-total --real-time=false

# Bash arithmetic doesnt do floats, need to use either bc or callout to 3rd party

BEG=$(date +%s.%3N)
.. code
ENDX=$(date +%s.%3N)
runtime=$(python -c "print(${ENDX} - ${BEG})")
echo $runtime

=====
find . -type f -mtime +60 -print0 |xargs -r0 ls --
find . -type f -mtime +60 -print0 |xargs -r0 rm

===
nmon - good system overview tool

===
<node>i-038e4e6e782af65ff</node>
# to get just the node information
# cut on '-' and then cut on the '<'
grep "<node>i-" *|cut -d "-" -f2 |cut -d "<" -f1

===
replace all occurences of X in last command
!!:gs/search/replace/
